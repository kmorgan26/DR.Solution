@namespace DRApplication.Client.Pages.Platforms
@page "/maintainers"

@inject MaintainerManager _db

<TitleHeader IconPath="@Icons.Material.Filled.LocalAirport" TitleText="Maintainers" />

<NewButton Url="/maintainer/create" />
@if (!_isBusy)
{
    <BasicMudTable Items="@_viewModels" Loading="@_isBusy" >
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Maintainer</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Maintainer">@context.Maintainer</MudTd>
        </RowTemplate>

        <RowEditTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Maintainer">
                <MudTextField @bind-Value="@context.Maintainer" Required />
            </MudTd>
        </RowEditTemplate>

    </BasicMudTable>
    
}

@code{
    bool _isBusy;
    public IEnumerable<MaintainerVm> _viewModels { get; set; }
    

    protected override async Task OnInitializedAsync()
    {
        _isBusy = true;
        var models = await _db.GetAllAsync();
        _viewModels = Mapping.Mapper.Map<IEnumerable<MaintainerVm>>(models);
        _isBusy = false;
    }
    
    private List<string> _editEvents = new();

    private void SaveChanges(MaintainerVm maintainerVm)
    {
        var maintainer = Mapping.Mapper.Map<Maintainer>(maintainerVm);
        _db.UpdateAsync(maintainer);
    }
}