@namespace DRApplication.Client.Controls
@inject IHardwareService HardwareService
@inject AppState AppState

@if (!_isBusy)
{
    <MudSelect Variant="Variant.Outlined" T="int" Label="Hardware System" Value="@AppState.HardwareSystemVm.Id" ValueChanged="@OnHardwareSystemIdChanged">
        <MudSelectItem Value="0">SELECT Hardware System</MudSelectItem>
        @foreach (var item in @AppState.HardwareSystemVms)
        {
            <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
        }
    </MudSelect>
}

@code {

    bool _isBusy;

    [Parameter]
    public EventCallback<int> OnHardwareSystemIdChanged { get; set; }

    private async Task SetHardwareSystems()
    {
        var items = await HardwareService.GetHardwareSystemVms();
        AppState.UpdateHardwareSystemVms(this, items);
    }

    protected override async Task OnInitializedAsync()
    {
        _isBusy = true;
        await SetHardwareSystems();
        _isBusy = false;
    }
}