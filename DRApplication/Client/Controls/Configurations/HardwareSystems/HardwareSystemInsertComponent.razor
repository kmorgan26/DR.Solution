@namespace DRApplication.Client.Controls
@inject NavigationManager navigation
@inject IMapperService MapperService
@inject ISnackbar Snackbar
@inject AppState AppState
@inject IHardwareService HardwareService

@if (_hardwareSystemInsertVm != null)
{
    <MudItem xs="12" sm="12" md="4" lg="3">
        <EditForm Model="@_hardwareSystemInsertVm" OnValidSubmit="@InsertHardwareSystem">

            <FluentValidationValidator DisableAssemblyScanning="true" />

            <MudTextField @bind-Value="_hardwareSystemInsertVm.Name"
                      For="(() => _hardwareSystemInsertVm.Name)"
                      Class="my-6"
                      Label="Hardware System"
                      Variant="Variant.Outlined" />

            <SubmitButton ButtonText="Insert" />
            <CancelButton Url="/hardwaresystem" />

        </EditForm>
    </MudItem>
}

@code {

    private HardwareSystemInsertVm _hardwareSystemInsertVm = new();

    private async Task InsertHardwareSystem()
    {
        var result = await HardwareService.InsertHardwareSystemFromHardwareSystemInsertVm(_hardwareSystemInsertVm);

        if (result > 0)
            Snackbar.Add($"The new Hardware System has been added!", Severity.Success);

        navigation.NavigateTo("/hardwaresystem");
    }
}