@inject SoftwareSystemManager manager
@inject NavigationManager navigation

<h3>Add New Software System</h3>
<div class="row">
    <div class="col-md-6 col-sm-12">
        @if (@_softwareSystemInsertVm != null)
        {
            <EditForm Model="@_softwareSystemInsertVm" OnValidSubmit="@InsertSoftwareSystem">

                <label for="Name">Software System</label>
                <InputText class="form-control" @bind-Value="_softwareSystemInsertVm.Name" />

                <HardwareConfigSelect HardwareConfigIdChange="UpdateConfig" SelectedHardwareConfigId="@_softwareSystemInsertVm.HardwareConfigId"></HardwareConfigSelect>

                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Primary" Size="Size.Small">Insert</MudButton>
                <MudButton Link="/Softwaresystem" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small">Cancel</MudButton>

            </EditForm>
        }
    </div>
</div>

@code {
    private SoftwareSystemInsertVm _softwareSystemInsertVm { get; set; } = new();

    void UpdateConfig(int? id)
    {
        _softwareSystemInsertVm.HardwareConfigId = Convert.ToInt32(id);
    }

    private async Task InsertSoftwareSystem()
    {
        var softwareSystem = Mapping.Mapper.Map<SoftwareSystem>(_softwareSystemInsertVm);
        await manager.InsertAsync(softwareSystem);
        navigation.NavigateTo("/softwaresystem");
    }
}
