@namespace DRApplication.Client.Controls
@inject AppState AppState
@inject NavigationManager navigation
@inject SoftwareSystemManager SoftwareSystemManager
@inject IHardwareService HardwareService
@inject IMapperService MapperService
@inject ISnackbar Snackbar

@if (!_isBusy)
{
    <MudItem xs="12" sm="12" md="4" lg="3">
        <EditForm Model="@AppState.SoftwareSystemVm" OnValidSubmit="@UpdateSoftwareSystem">

            <HardwareConfigSelect OnHardwareConfigIdChanged="UpdateHardwareConfigForSoftwareSystem" ></HardwareConfigSelect>

            <MudTextField @bind-Value="AppState.SoftwareSystemVm.Name" Class="my-6" Label="Software System" Variant="Variant.Outlined"></MudTextField>

            <SubmitButton ButtonText="Update" />
            <CancelButton Url="softwaresystem" />

        </EditForm>
    </MudItem>
}

@code {
    bool _isBusy;

    [Parameter]
    public int SoftwareSystemId { get; set; }

    async Task UpdateHardwareConfigForSoftwareSystem(int id)
    {
        if (id > 0)
        {
            var hardwareConfigVm = await HardwareService.GetHardwareConfigVmById(id);

            var softwareSystemVm = AppState.SoftwareSystemVm;
            softwareSystemVm.HardwareConfigId = id;
            AppState.UpdateSoftwareSystemVm(this, softwareSystemVm);
            AppState.UpdateHardwareConfigVm(this, hardwareConfigVm);

        }
    }

    protected async Task UpdateSoftwareSystem()
    {
        var softwareSystem = await MapperService.SoftwareSystemFromSoftwareSystemVmAsync(AppState.SoftwareSystemVm);
        await SoftwareSystemManager.UpdateAsync(softwareSystem);
        Snackbar.Add($"Software System was updated", Severity.Success);
        navigation.NavigateTo("/softwaresystem");
    }

    protected override async Task OnInitializedAsync()
    {
        _isBusy = true;
        var softwareSystem = await SoftwareSystemManager.GetByIdAsync(SoftwareSystemId);
        var softwareSystemVm = await MapperService.SoftwareSystemVmFromSoftwareSystemAsync(softwareSystem);
        AppState.UpdateSoftwareSystemVm(this, softwareSystemVm);
        _isBusy = false;
    }

}
