@namespace DRApplication.Client.Controls
@inject IMapperService MapperService
@inject AppState AppState
@inject SoftwareVersionManager SoftwareVersionManager
@inject NavigationManager navigation

@if (@_softwareVersionInsertVm != null)
{
    <MudItem xs="12" sm="12" md="4" lg="3">
        <EditForm Model="@_softwareVersionInsertVm" OnValidSubmit="@InsertSoftwareVersion">

            <MudTextField @bind-Value="_softwareVersionInsertVm.Name" Class="my-6" Label="Version Name" Variant="Variant.Outlined"></MudTextField>

            <SoftwareSystemSelect OnSoftwareSystemIdChanged="UpdateSoftwareSystem" />

            <MudDatePicker Class="my-6" Label="Version Date" @bind-Date="_softwareVersionInsertVm.VersionDate" />

            <SubmitButton ButtonText="Insert" />
            <CancelButton Url="softwareversion" />
        </EditForm>
    </MudItem>
}

@code {

    private SoftwareVersionInsertVm _softwareVersionInsertVm { get; set; } = new();

    void UpdateSoftwareSystem(int id)
    {
        if (id > 0)
        {
            var softwareSystemVm = AppState.SoftwareSystemVm;
            softwareSystemVm.Id = id;
            AppState.UpdateSoftwareSystemVm(this, softwareSystemVm);
        }

    }
    private async Task InsertSoftwareVersion()
    {
        _softwareVersionInsertVm.SoftwareSystemId = AppState.SoftwareSystemVm.Id;
        var softwareVersion = MapperService.SoftwareVersionFromSoftwareVersionsInsertVm(_softwareVersionInsertVm);
        await SoftwareVersionManager.InsertAsync(softwareVersion);
        navigation.NavigateTo("/softwareversion");
    }
}