@namespace DRApplication.Client.Controls
@inject NavigationManager NavigationManager
@inject AppState AppState
@inject CurrentLoadManager CurrentLoadManager
@inject IHardwareService HardwareService
@inject ILoadBuilderService LoadBuilderService

@if (!_isBusy)
{
    <MudItem xs="12" sm="12" md="4" lg="3">
        <EditForm Model="@AppState.CurrentLoadVm" OnValidSubmit="@UpdateCurrentLoad">

            <MudField Label="Device" Variant="Variant.Outlined">@AppState.CurrentLoadVm.Device</MudField>

            <LoadSelect OnLoadIdChanged="UpdateLoadIdForCurrentLoad" />

            <SubmitButton ButtonText="Update" />
            <CancelButton Url="currentload" />

        </EditForm>
    </MudItem>
}


@code {
    bool _isBusy;

    [Parameter]
    public int CurrentLoadId { get; set; }

    async Task UpdateLoadIdForCurrentLoad(int id)
    {
        //When the Load Select Value Changes, the LoadId needs to be updated
        if (id > 0)
        {
            var loadVm = await LoadBuilderService.GetLoadVmById(id);

            var currentLoadVm = AppState.CurrentLoadVm;
            currentLoadVm.LoadId = id;
            AppState.UpdateLoadVm(this, loadVm);
            AppState.UpdateCurrentLoadVm(this, currentLoadVm);
        }
    }

    protected async Task UpdateCurrentLoad()
    {
        var currentLoad = await LoadBuilderService.GetCurrentLoadFromCurrentLoadVm(AppState.CurrentLoadVm);
        await CurrentLoadManager.UpdateAsync(currentLoad);
        NavigationManager.NavigateTo("/currentload");
    }

    protected override async Task OnInitializedAsync()
    {
        _isBusy = true;
        var currentLoadVm = await LoadBuilderService.GetCurrentLoadVmById(CurrentLoadId);
        AppState.UpdateCurrentLoadVm(this, currentLoadVm);

        var loadVm = await LoadBuilderService.GetLoadVmById(currentLoadVm.LoadId);
        AppState.UpdateLoadVm(this, loadVm);

        var hardwareConfigVm = await HardwareService.GetHardwareConfigVmById(loadVm.HardwareConfigId);
        AppState.UpdateHardwareConfigVm(this, hardwareConfigVm);

        _isBusy = false;
    }

}