@inject HardwareVersionsConfigManager manager
@inject NavigationManager navigation

<h3>Add New Hardware Version/Config</h3>
<div class="row">
    <div class="col-md-6 col-sm-12">
        @if (@_hardwareVersionsConfigInsertVm != null)
        {
            <EditForm Model="@_hardwareVersionsConfigInsertVm" OnValidSubmit="@InsertHardwareVersionConfig">

                <HardwareVersionSelect HardwareVersionIdChange="UpdateVersion" SelectedHardwareVersionId="@_hardwareVersionsConfigInsertVm.HardwareVersionId"></HardwareVersionSelect>

                <HardwareConfigSelect HardwareConfigIdChange="UpdateConfig" SelectedHardwareConfigId="@_hardwareVersionsConfigInsertVm.HardwareConfigId"></HardwareConfigSelect>

                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Primary" Size="Size.Small">Insert</MudButton>
                <MudButton Link="/hardwareversionsconfig" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small">Cancel</MudButton>

            </EditForm>
        }
    </div>
</div>

@code {
    private HardwareVersionsConfigVm _hardwareVersionsConfigInsertVm { get; set; } = new();

    void UpdateVersion(int? id)
    {
        _hardwareVersionsConfigInsertVm.HardwareVersionId = Convert.ToInt32(id);
    }
    void UpdateConfig(int? id)
    {
        _hardwareVersionsConfigInsertVm.HardwareConfigId = Convert.ToInt32(id);
    }

    private async Task InsertHardwareVersionConfig()
    {
        var hardwareVersionConfig = Mapping.Mapper.Map<HardwareVersionsConfig>(_hardwareVersionsConfigInsertVm);
        await manager.InsertAsync(hardwareVersionConfig);
        navigation.NavigateTo("/hardwareversionsconfig");
    }
}
