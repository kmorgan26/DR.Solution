@namespace DRApplication.Client.Controls
@inject IMapperService MapperService
@inject AppState AppState
@inject HardwareVersionManager HardwareVersionManager
@inject NavigationManager navigation

@if (@_hardwareVersionInsertVm != null)
{
    <MudItem xs="12" sm="12" md="4" lg="3">
        <EditForm Model="@_hardwareVersionInsertVm" OnValidSubmit="@InsertHardwareVersion">

            <MudTextField @bind-Value="_hardwareVersionInsertVm.Name" Class="my-6" Label="Version Name" Variant="Variant.Outlined"></MudTextField>

            <HardwareSystemSelect OnHardwareSystemIdChanged="UpdateHardwareSystem" />

            <MudDatePicker Class="my-6" Label="Version Date" @bind-Date="_hardwareVersionInsertVm.VersionDate" />

            <SubmitButton ButtonText="Insert" />
            <CancelButton Url="hardwareversion" />
        </EditForm>
    </MudItem>
}

@code {

    private HardwareVersionInsertVm _hardwareVersionInsertVm { get; set; } = new();

    void UpdateHardwareSystem(int id)
    {
        if (id > 0)
        {
            var hardwareSystemVm = AppState.HardwareSystemVm;
            hardwareSystemVm.Id = id;
            AppState.UpdateHardwareSystemVm(this, hardwareSystemVm);
        }

    }

    private async Task InsertHardwareVersion()
    {
        _hardwareVersionInsertVm.HardwareSystemId = AppState.HardwareSystemVm.Id;
        var hardwareVersion = await MapperService.HardwareVersionFromHardwareVersionInsertVmAsync(_hardwareVersionInsertVm);
        await HardwareVersionManager.InsertAsync(hardwareVersion);
        navigation.NavigateTo("/hardwareversion");
    }
}