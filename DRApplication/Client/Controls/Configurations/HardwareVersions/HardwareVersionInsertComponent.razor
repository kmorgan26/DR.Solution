@namespace DRApplication.Client.Controls
@inject IMapperService MapperService
@inject ISnackbar Snackbar
@inject HardwareVersionManager HardwareVersionManager
@inject NavigationManager navigation
@inject AppState AppState

@if (!_isBusy)
{
    <MudItem xs="12" sm="12" md="4" lg="3">
        <EditForm Model="@AppState.HardwareVersionVm" OnValidSubmit="@InsertHardwareVersion">

            <FluentValidationValidator DisableAssemblyScanning="true"/>

            <MudTextField @bind-Value="@AppState.HardwareVersionVm.Name" 
                For="(() => AppState.HardwareVersionVm.Name)"
                Class="my-6" 
                Label="Version Name" 
                Variant="Variant.Outlined" />

            <HardwareSystemSelect OnHardwareSystemIdChanged="UpdateHardwareSystem" />

            <MudDatePicker Class="my-6" Label="Version Date" @bind-Date="@AppState.HardwareVersionVm.VersionDate" />

            <SubmitButton ButtonText="Insert" />
            <CancelButton Url="hardwareversion" />
        </EditForm>
    </MudItem>
}

@code {
    bool _isBusy;

    private HardwareVersionInsertVm _hardwareVersionInsertVm { get; set; } = new();

    void UpdateHardwareSystem(int id)
    {
        if (id > 0)
        {
            AppState.HardwareVersionVm.HardwareSystemId = id;
            var hardwareSystemVm = AppState.HardwareSystemVm;
            hardwareSystemVm.Id = id;
            AppState.UpdateHardwareSystemVm(this, hardwareSystemVm);
        }
    }

    private async Task InsertHardwareVersion()
    {
        _hardwareVersionInsertVm = MapperService.HardwareVersionInsertVmFromHardwareVersionVm(AppState.HardwareVersionVm);
        var hardwareVersion = MapperService.HardwareVersionFromHardwareVersionInsertVm(_hardwareVersionInsertVm);
        await HardwareVersionManager.InsertAsync(hardwareVersion);
        Snackbar.Add($"The Hardware System has been created. Don't believe me? Look at the table", Severity.Success);

        navigation.NavigateTo("/hardwareversion");
    }
    protected override async Task OnInitializedAsync()
    {
        _isBusy = true;
        await Task.Run(() => _hardwareVersionInsertVm.HardwareSystemId = AppState.HardwareSystemVm.Id);
        _isBusy = false;
    }
}