@namespace DRApplication.Client.Controls

@inject AppState AppState
@inject HardwareConfigManager HardwareConfigManager
@inject NavigationManager navigation

@if (@_hardwareConfigInsertVm != null)
{
    <MudItem xs="12" sm="12" md="4" lg="3">
        <EditForm Model="@_hardwareConfigInsertVm" OnValidSubmit="@InsertHardwareConfig">

            <DeviceTypeSelect OnDeviceTypeIdChanged="UpdateDeviceType" />

            <MudTextField @bind-Value="_hardwareConfigInsertVm.Name" Class="my-6" Label="Version Name" Variant="Variant.Outlined"></MudTextField>

            <SubmitButton ButtonText="Insert" />
            <CancelButton Url="hardwareconfig" />
        </EditForm>
    </MudItem>

}

@code {

    private HardwareConfigInsertVm _hardwareConfigInsertVm { get; set; } = new();

    void UpdateDeviceType(int id)
    {
        if (id > 0)
        {
            var deviceTypeVm = AppState.DeviceTypeVm;
            deviceTypeVm.Id = id;
            AppState.UpdateDeviceTypeVm(this, deviceTypeVm);
        }

    }

    private async Task InsertHardwareConfig()
    {
        _hardwareConfigInsertVm.DeviceTypeId = AppState.DeviceTypeVm.Id;
        var hardwareConfig = Mapping.Mapper.Map<HardwareConfig>(_hardwareConfigInsertVm);
        await HardwareConfigManager.InsertAsync(hardwareConfig);
        navigation.NavigateTo("/hardwareconfig");
    }
}