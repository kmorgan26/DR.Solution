@namespace DRApplication.Client.Controls

@inject IPlatformService PlatformService

<MudGrid Spacing="2" Justify="Justify.Center">
    @if (_isBusy || items is null)
    {
        @for (int i = 0; i < 7; i++)
        {
            <DeviceSkeleton />
        }
    }
    else
    {
        @foreach (var item in items)
        {
            <DeviceTypeCard DeviceTypeVm="item" />
        }
    }

</MudGrid>

@code {

    IEnumerable<DeviceTypeVm>? items;
    bool _isBusy;

    [CascadingParameter]
    AppStateComponent? AppState { get; set; }

    private async Task SetDeviceType(GenericListVm genericListVm)
    {
        var deviceTypeVm = await PlatformService.GetDeviceTypeVmFromGenericVm(genericListVm);
        AppState.DeviceTypeVm = deviceTypeVm;
    }

    protected override async Task OnInitializedAsync()
    {
        _isBusy = true;
        var deviceTypeVms = await PlatformService.GetDeviceTypeVmsAsync();
        items = Mapping.Mapper.Map<IEnumerable<DeviceTypeVm>>(deviceTypeVms);
        _isBusy = false;
    }

}
