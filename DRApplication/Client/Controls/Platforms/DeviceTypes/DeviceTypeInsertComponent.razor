@namespace DRApplication.Client.Controls
@inject AppState AppState
@inject IPlatformService PlatformService
@inject DeviceTypeManager DeviceTypeManager
@inject NavigationManager navigation
@inject ISnackbar Snackbar
@inject IMapperService MapperService

@if (!_isBusy)
{
    <MudItem xs="12" sm="12" md="4" lg="3">
        <EditForm Model="_deviceTypeInsertVm" OnValidSubmit="@InsertDeviceType">

            <FluentValidationValidator DisableAssemblyScanning="true" />

            <MudTextField @bind-Value="_deviceTypeInsertVm.Platform" 
                Variant="Variant.Outlined"
                For="(() => _deviceTypeInsertVm.Platform)"
                Label="Platform"
                Class="my-6" />

            <MaintainerSelect OnMaintainerIdChanged="UpdateMaintainer" />

            <MudCheckBox Class="my-6" Label="Active?" @bind-Checked="_deviceTypeInsertVm.IsActive" />

            <MudPaper Elevation="0">
                <SubmitButton ButtonText="Insert" />
                <CancelButton Url="devicetypes" />
            </MudPaper>
        </EditForm>
    </MudItem>

}

@code {

    bool _isBusy;

    private DeviceTypeInsertVm _deviceTypeInsertVm { get; set; } = new();

    void UpdateMaintainer(int id)
    {
        if (id > 0)
        {
            _deviceTypeInsertVm.MaintainerId = id;
            AppState.DeviceTypeVm.MaintainerId = id;
            var maintainerVm = AppState.MaintainerVm;
            maintainerVm.Id = id;
            AppState.UpdateMaintainerVm(this, maintainerVm);
        }

    }

    private async Task InsertDeviceType()
    {
        var deviceType = await MapperService.DeviceTypeFromDeviceTypeInsertVmAsync(_deviceTypeInsertVm);
        await DeviceTypeManager.InsertAsync(deviceType);
        Snackbar.Add($"The new Platform was Added!", Severity.Success);

        navigation.NavigateTo("/devicetypes");
    }
    protected override async Task OnInitializedAsync()
    {
        _isBusy = true;
        
        if(AppState.MaintainerVm is not null)
            await Task.Run(() => _deviceTypeInsertVm.MaintainerId = AppState.MaintainerVm.Id);

        _isBusy = false;
    }
}